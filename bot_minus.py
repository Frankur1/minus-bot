import logging
import tempfile
import subprocess
from pathlib import Path
import asyncio

from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes

# üîë –¢–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "8083958487:AAFBcJBZHMcFdgxSjVEXF5OIdkNEk1ebJUA"

logging.basicConfig(
    format="%(asctime)s [%(levelname)s] %(message)s",
    level=logging.INFO,
)

logger = logging.getLogger("minusbot")

# ==== –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ====


async def run_cmd(cmd: list[str], cwd: Path = None):
    """–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã –≤ subprocess + –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    logger.info("Running command: %s", " ".join(cmd))
    process = await asyncio.create_subprocess_exec(
        *cmd,
        cwd=cwd,
        stdout=subprocess.PIPE,
        stderr=subprocess.STDOUT,
    )
    stdout, _ = await process.communicate()
    logger.info(stdout.decode())
    return process.returncode


async def make_minus(url: str, msg):
    try:
        with tempfile.TemporaryDirectory() as tmpdir:
            tmpdir = Path(tmpdir)

            # === 1. –°–∫–∞—á–∞—Ç—å YouTube ===
            await msg.edit_text("üîΩ –°–∫–∞—á–∏–≤–∞—é —Ç—Ä–µ–∫ —Å YouTube‚Ä¶")
            wav_path = tmpdir / "input.wav"
            cmd_dl = [
                "yt-dlp",
                "--no-playlist",  # ‚ö°Ô∏è –≤–∞–∂–Ω–æ! –Ω–µ —Ç—è–Ω–µ–º –≤–µ—Å—å –ø–ª–µ–π–ª–∏—Å—Ç
                "-x",
                "--audio-format", "wav",
                "-o", str(wav_path),
                url,
            ]
            code = await run_cmd(cmd_dl, cwd=tmpdir)
            if code != 0 or not wav_path.exists():
                await msg.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏")
                return

            # === 2. Demucs —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ ===
            await msg.edit_text("üéô –†–∞–∑–¥–µ–ª—è—é –≤–æ–∫–∞–ª –∏ –º–∏–Ω—É—Å‚Ä¶")
            sep_dir = tmpdir / "sep"
            cmd_demucs = [
                "python3.11", "-m", "demucs.separate",
                "--two-stems", "vocals",
                "-o", str(sep_dir),
                str(wav_path),
            ]
            code = await run_cmd(cmd_demucs, cwd=tmpdir)
            if code != 0:
                await msg.edit_text("‚ùå –û—à–∏–±–∫–∞ Demucs")
                return

            no_vocals = next(sep_dir.rglob("no_vocals.wav"))

            # === 3. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ MP3 ===
            await msg.edit_text("üé∂ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ MP3‚Ä¶")
            mp3_path = tmpdir / "minus.mp3"
            cmd_ffmpeg = [
                "ffmpeg", "-y",
                "-i", str(no_vocals),
                "-b:a", "160k",
                str(mp3_path),
            ]
            code = await run_cmd(cmd_ffmpeg, cwd=tmpdir)
            if code != 0 or not mp3_path.exists():
                await msg.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ MP3")
                return

            # === 4. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ ===
            await msg.edit_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –º–∏–Ω—É—Å‚Ä¶")
            await msg.reply_document(document=open(mp3_path, "rb"))

            await msg.edit_text("‚úÖ –ì–æ—Ç–æ–≤–æ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–∏–Ω—É—Å.")

    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –≤ make_minus")
        await msg.edit_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")


# ==== –•—ç–Ω–¥–ª–µ—Ä—ã ====


async def handle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message:
        return
    text = update.message.text.strip()
    if text.startswith("http"):
        msg = await update.message.reply_text("–ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É‚Ä¶")
        await make_minus(text, msg)


def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle))
    logger.info("=== Bot starting === minusbot v3.9 (with token)")
    app.run_polling()


if __name__ == "__main__":
    main()
